/* Generated by: ${generated_by}. ${filename}${grammar.copyrightBlurb} */
[#if grammar.parserPackage?has_content]
package ${grammar.parserPackage};
[/#if]

import java.io.PrintStream;
import java.util.EnumSet;

public class NonTerminalCall {
    final ${grammar.parserClassName} parser;
    final ${grammar.lexerClassName} lexer;
    final String sourceFile;
    final String productionName;
    final int line, column;

   [#if grammar.faultTolerant]
    final EnumSet<TokenType> followSet;
   [/#if]


    NonTerminalCall(${grammar.parserClassName} parser, ${grammar.lexerClassName} lexer, String sourceFile, String productionName, int line, int column) {
        this.parser = parser;
        this.lexer = lexer;
        this.sourceFile = sourceFile;
        this.productionName = productionName;
        this.line = line;
        this.column = column;
      [#if grammar.faultTolerant]
        this.followSet = parser.outerFollowSet;
      [/#if]
    }

    final ${grammar.lexerClassName} getTokenSource() {
        return lexer;
    }

    StackTraceElement createStackTraceElement() {
        return new StackTraceElement("${grammar.parserClassName}", productionName, sourceFile, line);
    }

    void dump(PrintStream ps) {
         ps.println(productionName + ":" + line + ":" + column);
    }
}
